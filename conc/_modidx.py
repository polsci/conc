# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/conc',
                'doc_host': 'https://geoffford.nz',
                'git_url': 'https://github.com/polsci/conc',
                'lib_path': 'conc'},
  'syms': { 'conc.collocates': { 'conc.collocates.Collocates': ('collocates.html#collocates', 'conc/collocates.py'),
                                 'conc.collocates.Collocates.__init__': ('collocates.html#collocates.__init__', 'conc/collocates.py')},
            'conc.concordance': { 'conc.concordance.Concordance': ('concordance.html#concordance', 'conc/concordance.py'),
                                  'conc.concordance.Concordance.__init__': ('concordance.html#concordance.__init__', 'conc/concordance.py'),
                                  'conc.concordance.Concordance._get_concordance_sort': ( 'concordance.html#concordance._get_concordance_sort',
                                                                                          'conc/concordance.py'),
                                  'conc.concordance.Concordance.concordance': ( 'concordance.html#concordance.concordance',
                                                                                'conc/concordance.py'),
                                  'conc.concordance.Concordance.concordance_plot': ( 'concordance.html#concordance.concordance_plot',
                                                                                     'conc/concordance.py')},
            'conc.core': { 'conc.core.ConcLogger': ('core.html#conclogger', 'conc/core.py'),
                           'conc.core.ConcLogger.__init__': ('core.html#conclogger.__init__', 'conc/core.py'),
                           'conc.core.ConcLogger._setup_handler': ('core.html#conclogger._setup_handler', 'conc/core.py'),
                           'conc.core.ConcLogger.memory_usage': ('core.html#conclogger.memory_usage', 'conc/core.py'),
                           'conc.core.ConcLogger.set_state': ('core.html#conclogger.set_state', 'conc/core.py'),
                           'conc.core.CorpusMetadata': ('core.html#corpusmetadata', 'conc/core.py'),
                           'conc.core.create_large_dataset_sizes': ('core.html#create_large_dataset_sizes', 'conc/core.py'),
                           'conc.core.create_toy_corpus_sources': ('core.html#create_toy_corpus_sources', 'conc/core.py'),
                           'conc.core.get_garden_party': ('core.html#get_garden_party', 'conc/core.py'),
                           'conc.core.get_large_dataset': ('core.html#get_large_dataset', 'conc/core.py'),
                           'conc.core.get_nltk_corpus_sources': ('core.html#get_nltk_corpus_sources', 'conc/core.py'),
                           'conc.core.get_stop_words': ('core.html#get_stop_words', 'conc/core.py'),
                           'conc.core.list_corpora': ('core.html#list_corpora', 'conc/core.py'),
                           'conc.core.set_logger_state': ('core.html#set_logger_state', 'conc/core.py'),
                           'conc.core.show_toy_corpus': ('core.html#show_toy_corpus', 'conc/core.py'),
                           'conc.core.spacy_attribute_name': ('core.html#spacy_attribute_name', 'conc/core.py')},
            'conc.corpus': { 'conc.corpus.Corpus': ('corpus.html#corpus', 'conc/corpus.py'),
                             'conc.corpus.Corpus.__init__': ('corpus.html#corpus.__init__', 'conc/corpus.py'),
                             'conc.corpus.Corpus.__str__': ('corpus.html#corpus.__str__', 'conc/corpus.py'),
                             'conc.corpus.Corpus._complete_build_process': ('corpus.html#corpus._complete_build_process', 'conc/corpus.py'),
                             'conc.corpus.Corpus._create_indices': ('corpus.html#corpus._create_indices', 'conc/corpus.py'),
                             'conc.corpus.Corpus._get_text': ('corpus.html#corpus._get_text', 'conc/corpus.py'),
                             'conc.corpus.Corpus._index_name': ('corpus.html#corpus._index_name', 'conc/corpus.py'),
                             'conc.corpus.Corpus._init_build_process': ('corpus.html#corpus._init_build_process', 'conc/corpus.py'),
                             'conc.corpus.Corpus._init_corpus_dataframes': ('corpus.html#corpus._init_corpus_dataframes', 'conc/corpus.py'),
                             'conc.corpus.Corpus._init_frequency_table': ('corpus.html#corpus._init_frequency_table', 'conc/corpus.py'),
                             'conc.corpus.Corpus._init_spacy_model': ('corpus.html#corpus._init_spacy_model', 'conc/corpus.py'),
                             'conc.corpus.Corpus._init_token_arrays': ('corpus.html#corpus._init_token_arrays', 'conc/corpus.py'),
                             'conc.corpus.Corpus._init_tokens_sort_order': ('corpus.html#corpus._init_tokens_sort_order', 'conc/corpus.py'),
                             'conc.corpus.Corpus._mask_from_positions': ('corpus.html#corpus._mask_from_positions', 'conc/corpus.py'),
                             'conc.corpus.Corpus._prepare_csv': ('corpus.html#corpus._prepare_csv', 'conc/corpus.py'),
                             'conc.corpus.Corpus._prepare_files': ('corpus.html#corpus._prepare_files', 'conc/corpus.py'),
                             'conc.corpus.Corpus._process_punct_positions': ( 'corpus.html#corpus._process_punct_positions',
                                                                              'conc/corpus.py'),
                             'conc.corpus.Corpus._update_build_process': ('corpus.html#corpus._update_build_process', 'conc/corpus.py'),
                             'conc.corpus.Corpus.build': ('corpus.html#corpus.build', 'conc/corpus.py'),
                             'conc.corpus.Corpus.build_from_csv': ('corpus.html#corpus.build_from_csv', 'conc/corpus.py'),
                             'conc.corpus.Corpus.build_from_files': ('corpus.html#corpus.build_from_files', 'conc/corpus.py'),
                             'conc.corpus.Corpus.frequency_of': ('corpus.html#corpus.frequency_of', 'conc/corpus.py'),
                             'conc.corpus.Corpus.get_ngrams_by_index': ('corpus.html#corpus.get_ngrams_by_index', 'conc/corpus.py'),
                             'conc.corpus.Corpus.get_token_positions': ('corpus.html#corpus.get_token_positions', 'conc/corpus.py'),
                             'conc.corpus.Corpus.get_tokens_by_index': ('corpus.html#corpus.get_tokens_by_index', 'conc/corpus.py'),
                             'conc.corpus.Corpus.info': ('corpus.html#corpus.info', 'conc/corpus.py'),
                             'conc.corpus.Corpus.load': ('corpus.html#corpus.load', 'conc/corpus.py'),
                             'conc.corpus.Corpus.save_corpus_metadata': ('corpus.html#corpus.save_corpus_metadata', 'conc/corpus.py'),
                             'conc.corpus.Corpus.summary': ('corpus.html#corpus.summary', 'conc/corpus.py'),
                             'conc.corpus.Corpus.text': ('corpus.html#corpus.text', 'conc/corpus.py'),
                             'conc.corpus.Corpus.token_ids_to_sort_order': ('corpus.html#corpus.token_ids_to_sort_order', 'conc/corpus.py'),
                             'conc.corpus.Corpus.token_ids_to_tokens': ('corpus.html#corpus.token_ids_to_tokens', 'conc/corpus.py'),
                             'conc.corpus.Corpus.token_to_id': ('corpus.html#corpus.token_to_id', 'conc/corpus.py'),
                             'conc.corpus.Corpus.tokenize': ('corpus.html#corpus.tokenize', 'conc/corpus.py'),
                             'conc.corpus.Corpus.tokens_to_token_ids': ('corpus.html#corpus.tokens_to_token_ids', 'conc/corpus.py')},
            'conc.frequency': { 'conc.frequency.Frequency': ('frequency.html#frequency', 'conc/frequency.py'),
                                'conc.frequency.Frequency.__init__': ('frequency.html#frequency.__init__', 'conc/frequency.py'),
                                'conc.frequency.Frequency.frequencies': ('frequency.html#frequency.frequencies', 'conc/frequency.py')},
            'conc.keyness': { 'conc.keyness.Keyness': ('keyness.html#keyness', 'conc/keyness.py'),
                              'conc.keyness.Keyness.__init__': ('keyness.html#keyness.__init__', 'conc/keyness.py')},
            'conc.ngrams': { 'conc.ngrams.Ngrams': ('ngrams.html#ngrams', 'conc/ngrams.py'),
                             'conc.ngrams.Ngrams.__init__': ('ngrams.html#ngrams.__init__', 'conc/ngrams.py'),
                             'conc.ngrams.Ngrams._get_ngrams': ('ngrams.html#ngrams._get_ngrams', 'conc/ngrams.py'),
                             'conc.ngrams.Ngrams.ngram_frequencies': ('ngrams.html#ngrams.ngram_frequencies', 'conc/ngrams.py'),
                             'conc.ngrams.Ngrams.ngrams': ('ngrams.html#ngrams.ngrams', 'conc/ngrams.py')},
            'conc.report': { 'conc.report.Report': ('report.html#report', 'conc/report.py'),
                             'conc.report.Report.__init__': ('report.html#report.__init__', 'conc/report.py'),
                             'conc.report.Report.concordance': ('report.html#report.concordance', 'conc/report.py'),
                             'conc.report.Report.frequencies': ('report.html#report.frequencies', 'conc/report.py'),
                             'conc.report.Report.ngrams': ('report.html#report.ngrams', 'conc/report.py')},
            'conc.result': { 'conc.result.Result': ('result.html#result', 'conc/result.py'),
                             'conc.result.Result.__init__': ('result.html#result.__init__', 'conc/result.py'),
                             'conc.result.Result.display': ('result.html#result.display', 'conc/result.py'),
                             'conc.result.Result.to_frame': ('result.html#result.to_frame', 'conc/result.py')},
            'conc.text': { 'conc.text.Text': ('text.html#text', 'conc/text.py'),
                           'conc.text.Text.__init__': ('text.html#text.__init__', 'conc/text.py'),
                           'conc.text.Text.__str__': ('text.html#text.__str__', 'conc/text.py'),
                           'conc.text.Text._div': ('text.html#text._div', 'conc/text.py'),
                           'conc.text.Text._nl2br': ('text.html#text._nl2br', 'conc/text.py'),
                           'conc.text.Text.as_string': ('text.html#text.as_string', 'conc/text.py'),
                           'conc.text.Text.as_tokens': ('text.html#text.as_tokens', 'conc/text.py'),
                           'conc.text.Text.display': ('text.html#text.display', 'conc/text.py'),
                           'conc.text.Text.display_metadata': ('text.html#text.display_metadata', 'conc/text.py'),
                           'conc.text.Text.tokens_count': ('text.html#text.tokens_count', 'conc/text.py')}}}
